/***********************************************************************/
/*                                                                     */
/*  FILE        :iic_wl_1.c                                            */
/*  DATE        :Wed, Oct 17, 2012                                     */
/*  DESCRIPTION :Main Program                                          */
/*  CPU TYPE    :RX62T                                                 */
/*                                                                     */
/*  This file is generated by Renesas Project Generator (Ver.4.53).    */
/*  NOTE:THIS IS A TYPICAL EXAMPLE.                                    */
/*                                                                     */
/***********************************************************************/
                  
#include	<machine.h>
#include	<_h_c_lib.h>
//#include	<stddef.h>					// Remove the comment when you use errno
//#include 	<stdlib.h>					// Remove the comment when you use rand()
#include	"typedefine.h"		// Define Types
#include	"stacksct.h"		// Stack Sizes (Interrupt and User)
#include "iodefine.h"

int psw_value;
unsigned short HIT_pwm=0;
unsigned short HIT_tgr_b_val3;
unsigned short HIT_tgr_d_val3;
unsigned short HIT_tgr_a_val4;
unsigned short HIT_tgr_c_val4;
unsigned short HIT_tgr_b_val4;
unsigned short HIT_tgr_d_val4;
unsigned short HIT_counter_val0=0;
unsigned short HIT_gtccr_a_val0=1200;
unsigned short HIT_gtccr_b_val0=1200;
//unsigned short gtpbr_val0=2400;

unsigned short HIT_counter_val1=0;
unsigned short HIT_gtccr_a_val1=1200;
unsigned short HIT_gtccr_b_val1=1200;


unsigned short HIT_counter_val2=0;
unsigned short HIT_gtccr_a_val2=1200;
unsigned short HIT_gtccr_b_val2=1200;

//#include "typedefine.h"
#ifdef __cplusplus
//#include <ios>                        // Remove the comment when you use ios
//_SINT ios_base::Init::init_cnt;       // Remove the comment when you use ios
#endif
unsigned char HIT_iic_word_send[2] ;/////// address and data to iic send
unsigned char HIT_iic_word_rec;
unsigned char HIT_iic_word_rec_ad = 0x02;// address of iic read ///////////////////////////////////
unsigned char HIT_iic_send_num = 0;
unsigned char HIT_iic_rec_num = 0;
void Sci2TrFunc()
{
	;	
}
void Sci2ReFunc()
{
	;	
}
void Gpt0CmVIntFunc()
{
	GPT0.GTST.BIT.TCFPO =0;		
}
void Cmt0IntFunc()
{
	psw_value = get_psw();
	psw_value |= 0x00010000;
	set_psw(psw_value);	
	if( HIT_iic_send_num == 1)/////////////// the function of sending iic 
	{
//		R_PG_I2C_MasterSend_C0(0xa2, HIT_iic_word_send, 2);//block 1 dizhi 1 xie 2

//		RIIC0.ICCR1.BIT.ICE = 1;//unable iic
		
//		RIIC0.ICCR2.BIT.MST = 1;

		RIIC0.ICCR2.BIT.ST = 1;
		RIIC0.ICCR1.BIT.SCLO = 1;
		RIIC0.ICCR1.BIT.SDAO = 1;
		RIIC0.ICCR1.BIT.SCLI = 1;
		RIIC0.ICCR1.BIT.SDAI = 1;
//		RIIC0.ICCR2.BIT.SP = 1;

//		RIIC0.ICCR2.BIT.TRS = 1;

//		RIIC0.SARL0.BIT.SVA = 0X51;

//		RIIC0.ICDRT = 0XA2;//HIT_iic_word_send[0];
//		RIIC0.ICDRT = 0X02;
		
		
	//	RIIC0.ICCR2.BIT.ST = 1;
	//	RIIC0.ICCR1.BIT.SCLO = 1;
	//	RIIC0.ICCR1.BIT.SDAO = 1;
	//	RIIC0.ICCR1.BIT.SCLI = 1;
	//	RIIC0.ICCR1.BIT.SDAI = 1;
		SYSTEM.MSTPCRA.BIT.MSTPA28 = 1;
		RIIC0.ICDRT = 0XA2;
		RIIC0.ICDRT = 0X01;

		RIIC0.ICDRT = 0X02;
		
	}
/*	if( HIT_iic_rec_num == 1)//////////////// the function of receiving iic 
	{
		R_PG_I2C_MasterSend_C0(0xa2, &HIT_iic_word_rec_ad, 1);
		R_PG_I2C_MasterReceive_C0(0xa3,&HIT_iic_word_rec,1);	
	}*/
	
	HIT_iic_send_num++;
	HIT_iic_rec_num++;
	if(HIT_iic_send_num == 100)
	{
		HIT_iic_send_num = 2;	
	}
	if(HIT_iic_rec_num == 100)
	{
		HIT_iic_rec_num = 2;	
	}
}

void main(void);
#ifdef __cplusplus
extern "C" {
void abort(void);
}
#endif

void main(void)
{
	R_PG_Clock_Set();
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////
	SYSTEM.MSTPCRB.BIT.MSTPB21 = 0;
	PORTB.DDR.BIT.B1 = 0;
	PORTB.DDR.BIT.B2 = 0;
	PORTB.ICR.BIT.B1 = 1;
	PORTB.ICR.BIT.B2 = 1;

	RIIC0.ICCR1.BIT.ICE = 0;//unable iic
	
	RIIC0.ICMR3.BIT.SMBS = 0;//IIC MODE
	RIIC0.ICMR1.BIT.CKS = 0X03;//DIV 8 CLOCK
	RIIC0.ICMR2.BIT.TMOL = 0;//PDL_IIC_TIMEOUT_DISABLE
	RIIC0.ICMR2.BIT.TMOH = 0;
	RIIC0.ICMR2.BIT.SDDL = 0X00;//PDL_IIC_SDA_DELAY_0
	RIIC0.ICMR3.BIT.NF = 0X00;//PDL_IIC_NF_DISABLE
	RIIC0.ICFER.BIT.NALE = 0;//PDL_IIC_NTALD_DISABLE
	RIIC0.ICFER.BIT.SALE = 0;//PDL_IIC_SALD_DISABLE
	RIIC0.ICSER.BIT.SAR0E = 0;//PDL_IIC_SLAVE_0_DISABLE
	RIIC0.ICSER.BIT.SAR1E = 0;
	RIIC0.ICSER.BIT.SAR2E = 0;
	RIIC0.ICSER.BIT.GCAE = 0;//PDL_IIC_SLAVE_GCA_DISABLE
	RIIC0.ICSER.BIT.DIDE = 0;//PDL_IIC_DEVICE_ID_DISABLE
	RIIC0.ICSER.BIT.HOAE = 0;//PDL_IIC_HOST_ADDRESS_DISABLE
	
	RIIC0.ICBRL.BIT.BRL = 23;//Transfer rate control ( 1 << 31 ) | ( 23 << 8 ) | 23
	RIIC0.ICBRH.BIT.BRH = 23;
	
	RIIC0.ICCR1.BIT.ICE = 1;//unable iic	

///////////////////////////////////////////////////////////////////////////////////////////////////////////////////	
//	R_PG_I2C_Set_C0();
	HIT_iic_word_send[0] = 5;/////the address iic send
	HIT_iic_word_send[1] = 7;////the data iic send
	
	
	
	HIT_pwm=0;
	HIT_tgr_d_val3=500-HIT_pwm;
	HIT_tgr_b_val3=500-HIT_pwm;
	HIT_tgr_c_val4=500-HIT_pwm;
	HIT_tgr_a_val4=500-HIT_pwm;
	HIT_tgr_b_val4=500-HIT_pwm;
	HIT_tgr_d_val4=500-HIT_pwm;
	R_PG_Timer_Set_GPT_U0();///////////GPT
	R_PG_Timer_Set_GPT_U0_C0();
	R_PG_Timer_SetCounterValue_GPT_U0_C0(HIT_counter_val0);
	R_PG_Timer_SetGTCCR_A_GPT_U0_C0(HIT_tgr_b_val3);
	R_PG_Timer_SetGTCCR_B_GPT_U0_C0(HIT_tgr_d_val3);

	R_PG_Timer_Set_GPT_U0_C1();
	R_PG_Timer_SetCounterValue_GPT_U0_C1(HIT_counter_val1);
	R_PG_Timer_SetGTCCR_A_GPT_U0_C1(HIT_tgr_a_val4);
	R_PG_Timer_SetGTCCR_B_GPT_U0_C1(HIT_tgr_c_val4);
	R_PG_Timer_Set_GPT_U0_C2();
	R_PG_Timer_SetCounterValue_GPT_U0_C2(HIT_counter_val2);
	R_PG_Timer_SetGTCCR_A_GPT_U0_C2(HIT_tgr_b_val4);
	R_PG_Timer_SetGTCCR_B_GPT_U0_C2(HIT_tgr_d_val4);

	R_PG_Timer_Start_CMT_U0_C0();//CMT module start(1ms interrupt)
//	R_PG_Timer_Start_CMT_U1_C2();//	GPT0.GTONCR.BIT.OAE = 0;
	GPT.GTSTR.WORD = 0X07;//////START SYNCROSCOLLY

	
	
	while(1)
	{
		;	
	}
}

#ifdef __cplusplus
void abort(void)
{

}
#endif
